<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on Manis</title>
    <link>https://agmes47.github.io/post/</link>
    <description>Recent content in Post on Manis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2019 Yurizal Susanto</copyright>
    <lastBuildDate>Sat, 24 Feb 2024 16:45:57 +0800</lastBuildDate>
    <atom:link href="https://agmes47.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cloudflare_tunnel</title>
      <link>https://agmes47.github.io/post/cloudflare_tunnel/</link>
      <pubDate>Sat, 24 Feb 2024 16:45:57 +0800</pubDate>
      <guid>https://agmes47.github.io/post/cloudflare_tunnel/</guid>
      <description>References Zapic&amp;rsquo;s Blog&#xA;Lxn-Chan&#xA;Why would I need Cloudflare Tunnel Using nginx for port forwarding, for example, configuring a location/path {} in /etc/nginx/sites-available/default, allows access to services on ports other than 80 or 443 via domain_name/path. This is suitable for services with only a root path, such as cppla&amp;rsquo;s docker version serverstatus. However, for services with multiple subpaths, this simple method may fail, such as jadenlee2019&amp;rsquo;s mynodequery. The reason is that when accessing domain_name/path for the first time, nginx performs port forwarding, and the mynodequery service returns a 302 response with location=&#39;Dashboard&#39;, so the local browser will access domain_name/Dashboard.</description>
    </item>
    <item>
      <title>Serverstatus</title>
      <link>https://agmes47.github.io/post/serverstatus/</link>
      <pubDate>Wed, 21 Feb 2024 18:39:50 +0800</pubDate>
      <guid>https://agmes47.github.io/post/serverstatus/</guid>
      <description>Build a server monitor Source Project: serverstatus by cppla&#xA;I personally mainly referenced this blog post&#xA;Server Install docker and docker compose&#xA;curl -fsSL https://get.docker.com -o get-docker.sh &amp;amp;&amp;amp; sh ./get-docker.sh Check if docker successfully installeddocker compose version&#xA;docker -v # Some like &amp;#39;Docker version 23.0.2, build 569dd73&amp;#39; docker compose version # Some like &amp;#39;Docker Compose version v2.17.2&amp;#39; Download two configuration files: serverstatus-config.json and serverstatus-monthtraffic . Modify them according to your situation.</description>
    </item>
    <item>
      <title>Vpses</title>
      <link>https://agmes47.github.io/post/vpses/</link>
      <pubDate>Fri, 16 Feb 2024 22:53:00 +0800</pubDate>
      <guid>https://agmes47.github.io/post/vpses/</guid>
      <description>Vmiss CN.HK.INTL.Basic (14cad/year) Link&#xA;版本：2024.02.04 更新日志：VPS融合怪测试(集百家之长) &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;基础信息查询&amp;ndash;感谢所有开源项目&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; CPU 型号 : Intel Core Processor (Broadwell, IBRS) CPU 核心数 : 1 CPU 频率 : 2599.996 MHz CPU 缓存 : L1: 64.00 KB / L2: 4.00 MB / L3: 16.00 MB 硬盘空间 : 1.76 GiB / 9.81 GiB 启动盘路径 : /dev/vda1 内存 : 131.56 MiB / 979.00 MiB Swap : 1.01 MiB / 1024.00 MiB 系统在线时间 : 0 days, 6 hour 38 min 负载 : 0.</description>
    </item>
    <item>
      <title>Install g4f in Debian12</title>
      <link>https://agmes47.github.io/post/g4f/</link>
      <pubDate>Wed, 31 Jan 2024 09:37:19 +0800</pubDate>
      <guid>https://agmes47.github.io/post/g4f/</guid>
      <description>Set up Python environment in Debian 12/11/10 source&#xA;Update packages&#xA;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade Install the required packages for the compilation of Python source code&#xA;sudo apt install wget build-essential libncursesw5-dev libssl-dev \ libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev Download python 3.11&#xA;wget https://www.python.org/ftp/python/3.11.3/Python-3.11.7.tgz Extract archive&#xA;tar xzf Python-3.11.7.tgz Prepare for the installation&#xA;cd Python-3.11.7 ./configure --enable-optimizations Build and install&#xA;make -j 4 make altinstall Install g4f source</description>
    </item>
    <item>
      <title>Naive</title>
      <link>https://agmes47.github.io/post/naive/</link>
      <pubDate>Sat, 27 Jan 2024 13:45:31 +0800</pubDate>
      <guid>https://agmes47.github.io/post/naive/</guid>
      <description>Server Update and upgrade apt update &amp;amp;&amp;amp; apt upgrade Prerequisite Make sure the memory of your machine is larger than 1 GB. You may try swap if not.&#xA;A domain name that has been resolved(no CND).&#xA;Network tools for downloading apt-get install socat Installing Go environment wget https://go.dev/dl/go1.21.1.linux-amd64.tar.gz #replace &amp;#39;go1.21.1.linux-amd64.tar.gz&amp;#39; with the new go version tar -C /usr/local -xzf go1.21.1.linux-amd64.tar.gz #replace &amp;#39;go1.21.1.linux-amd64.tar.gz&amp;#39; with the new go version export PATH=&amp;#34;/usr/local/go/bin:$PATH&amp;#34; #temporary environment variable go env -w GO111MODULE=on #Set the Go module model as default behavior rm -f go1.</description>
    </item>
    <item>
      <title>Vmess &#43; CF &#43; WEB</title>
      <link>https://agmes47.github.io/post/vmesscfweb/</link>
      <pubDate>Mon, 22 Jan 2024 23:50:01 +0800</pubDate>
      <guid>https://agmes47.github.io/post/vmesscfweb/</guid>
      <description>Prerequisite A vps running x-ui, a domain utilizing Cloudflare for DNS resolution and CDN services.&#xA;Step 1 In x-ui, add an inbound.&#xA;protocol: vmess listening address: 127.0.0.1 port: random #---------- #add a user #---------- network: ws path: /example #replace &amp;#39;example&amp;#39; with something you can memorize Step 2 Copy the configuration link and import into v2ray. And make the following modification.&#xA;address: *.*.*.* #the IP of your vps port: 443 #80 if not going to use https protocol tls: tls Step 3 Modify the configuration of nginx(default path: /etc/nginx/sites-available/default)</description>
    </item>
    <item>
      <title>Connection to Github with SSH</title>
      <link>https://agmes47.github.io/post/github_ssh/</link>
      <pubDate>Sun, 21 Jan 2024 12:25:29 +0800</pubDate>
      <guid>https://agmes47.github.io/post/github_ssh/</guid>
      <description>Create a depository on local git init Set username and email git config --global user.name &amp;#34;luminary&amp;#34;&#xD;git config --global user.email &amp;#34;luminary@g.com&amp;#34; Generate a new SSH key ssh-keygen -t ed25519 -C &amp;#34;your_email@example.com&amp;#34; Adding the SSH key to the ssh-agent In a new admin elevated PowerShell window, ensure the ssh-agent is running. You can start it manually:&#xA;# start the ssh-agent in the background Get-Service -Name ssh-agent | Set-Service -StartupType Manual Start-Service ssh-agent In a terminal window without elevated permissions, add your SSH private key to the ssh-agent.</description>
    </item>
    <item>
      <title>hy2</title>
      <link>https://agmes47.github.io/post/hy2/</link>
      <pubDate>Sat, 20 Jan 2024 16:50:56 +0800</pubDate>
      <guid>https://agmes47.github.io/post/hy2/</guid>
      <description>Related links V2ray: https://github.com/2dust/v2rayN/releases/latest&#xA;Hysteria 2下载：https://github.com/apernet/hysteria/releases&#xA;Hysteria 2文档：https://v2.hysteria.network/zh/&#xA;Install hysteria 2 bash &amp;lt;(curl -fsSL https://get.hy2.sh/) Generate Self-Signed Certification openssl req -x509 -nodes -newkey ec:&amp;lt;(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj &amp;#34;/CN=bing.com&amp;#34; -days 36500 &amp;amp;&amp;amp; sudo chown hysteria /etc/hysteria/server.key &amp;amp;&amp;amp; sudo chown hysteria /etc/hysteria/server.crt All the commands might need #启动Hysteria2 systemctl start hysteria-server.service #重启Hysteria2 systemctl restart hysteria-server.service #查看Hysteria2状态 systemctl status hysteria-server.service #停止Hysteria2 systemctl stop hysteria-server.service #设置开机自启 systemctl enable hysteria-server.service #查看日志 journalctl -u hysteria-server.</description>
    </item>
    <item>
      <title>Warp &#43; ARGOX</title>
      <link>https://agmes47.github.io/post/wapargox/</link>
      <pubDate>Mon, 15 Jan 2024 22:29:58 +0800</pubDate>
      <guid>https://agmes47.github.io/post/wapargox/</guid>
      <description>WARP Install warp(choose every default option)&#xA;Link&#xA;wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;amp;&amp;amp; bash menu.sh [option] [lisence/url/token] ARGOX Install argox&#xA;Link&#xA;bash &amp;lt;(wget -qO- https://raw.githubusercontent.com/fscarmen/argox/main/argox.sh) For more details, please visit this video.&#xA;Problem The node won&amp;rsquo;t work after restarting the machine even if argo and xray will run after booting. My rough solution for this problem is reinstalling argox.</description>
    </item>
    <item>
      <title>How to use OhMyPosh to decorate your terminal</title>
      <link>https://agmes47.github.io/post/ohmyposh_install/</link>
      <pubDate>Sat, 30 Dec 2023 19:43:57 +0800</pubDate>
      <guid>https://agmes47.github.io/post/ohmyposh_install/</guid>
      <description>1. Powershell At the beginning, I was trying to implement it on WindowsPowershell and result in a mess which I&amp;rsquo;ve forgot(For more information about the differences between them, please check out this page. Then I strictly follow steps on the official document while at the same time still encounter some problems. Here I will show the proper way I&amp;rsquo;ve tried on to complete this task.&#xA;(1) Install OhMyPosh Open Powershell and execute the command:</description>
    </item>
    <item>
      <title>Some configurations</title>
      <link>https://agmes47.github.io/post/config/</link>
      <pubDate>Sat, 02 Jan 2010 16:49:08 +0800</pubDate>
      <guid>https://agmes47.github.io/post/config/</guid>
      <description>Go&amp;rsquo;s configuration in VScode Setting up Go in Windows&#xA;Problem: Could not download VScode plugins of Go due to a famous firewall(I guess). here is the reference.&#xA;Solvation:&#xA;This is the old version(abandoned):&#xA;go env -w GO111MODULE=on go env -w GOPROXY=https://goproxy.io,direct Open cmd or powershell and run the following commands:&#xA;go env -w GO111MODULE=on go env -w GOPROXY=https://proxy.golang.com.cn,direct Then restart VScode and install the Go plugins again, you should succeed.</description>
    </item>
    <item>
      <title>Having Fun</title>
      <link>https://agmes47.github.io/post/havingfun/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0800</pubDate>
      <guid>https://agmes47.github.io/post/havingfun/</guid>
      <description>How was this blog builded source&#xA;theme&#xA;Random Keyboard got locked A cat standing on my keyboard for a good amount of seconds and the keyboard got locked afer instant sharp &amp;lsquo;di&amp;rsquo; sound. The solution is press the right Shift key for more than 8 seconds. Reference: https://www.zhihu.com/question/539981785#&#xA;VPS Basic Add a new user adduser and useradd are different. Use adduser. So applied to other similar commands, I guess.&#xA;Add a pubkey file First generate a pair of **publicKey **and secretKey files:</description>
    </item>
  </channel>
</rss>
